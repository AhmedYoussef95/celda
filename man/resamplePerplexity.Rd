% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_performance.R
\name{resamplePerplexity}
\alias{resamplePerplexity}
\title{Calculate and visualize perplexity of all models in a celdaList, with
 count resampling}
\usage{
resamplePerplexity(counts, celdaList, resample = 5, seed = 12345)
}
\arguments{
\item{counts}{Integer matrix. Rows represent features and columns represent
cells. This matrix should be the same as the one used to generate
`celda.mod`.}

\item{celdaList}{Object of class 'celdaList'.}

\item{resample}{Integer. The number of times to resample the counts matrix
for evaluating perplexity. Default 5.}

\item{seed}{Parameter to set.seed() for random number generation. Default
12345.If NULL, no calls to `set.seed()` are made.}
}
\value{
celdaList. Returns the provided `celdaList` with a `perplexity`
 property, detailing the perplexity of all K/L combinations that appeared in
 the celdaList's models.
}
\description{
Calculates the perplexity of each model's cluster assignments
 given the provided countMatrix, as well as resamplings of that count
 matrix, providing a distribution of perplexities and a better sense of the
 quality of a given K/L choice.
}
\examples{
celda.CG.grid.search.res <- resamplePerplexity(
  celda.CG.sim$counts,
  celda.CG.grid.search.res
)
plotGridSearchPerplexity(celda.CG.grid.search.res)
}
